{"version":3,"sources":["components/UI/button/Button.module.css","components/Footer.jsx","components/Header.jsx","components/UI/input/Input.jsx","components/PostForm.jsx","components/Post.jsx","components/PostsList.jsx","components/UI/select/Select.jsx","components/PostFilter.jsx","hooks/usePosts.js","components/API/PostService.js","components/UI/preloader/Preloader.jsx","components/utils/pages.js","components/UI/pagination/Pagination.jsx","components/Main.jsx","App.js","index.js"],"names":["module","exports","Footer","className","Date","getFullYear","href","Header","id","Input","React","forwardRef","props","ref","PostForm","create","useState","title","value","post","setPost","onChange","e","target","type","placeholder","onClick","preventDefault","newPost","now","Post","remove","body","PostsList","posts","length","TransitionGroup","map","CSSTransition","timeout","classNames","Select","options","defaultValue","event","disabled","option","name","desc","PostFilter","filter","setFilter","query","sort","selectedSort","usePosts","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","includes","PostService","limit","page","axios","get","params","_limit","_page","response","Preloader","getPageCount","totalCount","Math","ceil","Pagination","totalPages","changePage","pagesArray","result","i","push","getPagesArray","p","Main","setPosts","sortedAndSearchedPosts","isPostLoading","setIsPostLoading","setTotalPages","setPage","fetchPosts","getAll","data","headers","useEffect","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62fb9bf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyBtn\":\"Button_MyBtn__1xMzk\"};","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t        <footer className=\"page-footer purple accent-3\">\r\n\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            © {new Date().getFullYear()} Copyright Text\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/UsernameMy1/ulbi-blog\">Repo</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t  <nav>\r\n    <div className=\"nav-wrapper purple accent-3\">\r\n      <a href=\"#\" className=\"brand-logo\">React UlbiTV</a>\r\n      <ul id=\"nav-mobile purple accent-3\" className=\"right hide-on-med-and-down\">\r\n        <li><a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/UsernameMy1/ulbi-blog\">Repo</a></li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n\treturn (\r\n\t\t<div className=\"input-field col s12\">\r\n\t\t<input ref={ref} {...props} className=\"validate\"/>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default Input;","import React, {useState} from 'react';\r\nimport Input from './UI/input/Input'\r\nimport Button from './UI/button/Button'\r\nconst PostForm = ({create}) => {\r\n\r\n\tconst [post, setPost] = useState({title: '', value: ''});\r\n\r\n\tconst addNewPost = (e) => { \r\n\t\te.preventDefault();\r\n\t\tconst newPost = {\r\n\t\t\t...post, id: Date.now()\r\n\t\t}\r\n\t\tcreate(newPost)\r\n\t\tsetPost({title: '', value: ''})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form className=\"col s12\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<Input value={post.title} onChange={e => setPost({...post, title: e.target.value})} type=\"text\" placeholder={'Название поста'}/>\r\n\t\t\t\t\t<Input value={post.value} onChange={e => setPost({...post, value: e.target.value})} type=\"text\" placeholder={'Описание поста'}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn\" onClick={addNewPost} >Создать пост</button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\n\r\nconst Post = ({post, remove}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t  <div className=\"row\">\r\n        <div className=\"col s12 m12\">\r\n          <div className=\"card  center-align\">\r\n            <span className=\"card-title\">{post.title}</span>\r\n            <div className=\"card-content\">\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <button onClick={() => remove(post)} className=\"btn\" href=\"#\">Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Post from './Post'\r\n\r\nconst PostsList = ({posts, title, remove}) => {\r\n\tif (!posts.length) {\r\n\t\treturn(\r\n\t\t\t <h2 className=\"center-align\">Нет постов</h2>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 className=\"center-align\">{title}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t{posts.map(post =>\r\n\t\t\t\t\t\t<CSSTransition\r\n\t\t\t\t\t\t\tkey={post.id}\r\n\t\t\t\t\t\t\ttimeout={500}\r\n\t\t\t\t\t\t\tclassNames=\"post\" \r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Post remove={remove}  post={post} />\r\n\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\n\r\nconst Select = ({options, defaultValue, value, onChange}) => {\r\n\treturn (\r\n\t\t<div className=\"margintop\">\r\n\t\t\t<select className=\"browser-default\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={event => onChange(event.target.value)}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"\" disabled >{defaultValue}</option>\r\n\t\t\t\t\t{options.map(option =>\r\n\t\t\t\t\t<option key={option.desc} value={option.name}>\r\n\t\t\t\t\t\t{option.desc}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t)}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Select;","import React from 'react';\r\nimport Select from './UI/select/Select';\r\nimport Input from './UI/input/Input'\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={filter.query}\r\n\t\t\t\tonChange={e => setFilter({...filter, query: e.target.value})}\r\n\t\t\t\tplaceholder=\"Поиск\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tvalue={filter.sort}\r\n\t\t\t\t\tonChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n\t\t\t\t\tdefaultValue=\"Сортировка\"\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{name: 'title', desc: 'По названию'},\r\n\t\t\t\t\t\t{name: 'body', desc: 'По описанию'},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostFilter;","import {useMemo} from 'react'\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n\t\tconst sortedPosts = useMemo(() => {\r\n\t\tif(sort) {\r\n\t\t\treturn [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n\t\t}\r\n\t\treturn posts;\r\n\t}, [sort, posts])\r\n\r\n\treturn sortedPosts;\r\n};\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n\tconst sortedPosts = useSortedPosts(posts, sort);\r\n\r\n\tconst sortedAndSearchedPosts = useMemo(() => {\r\n\t\treturn sortedPosts.filter(post => post.title.includes(query))\r\n\t}, [query, sortedPosts])\r\n\r\n\treturn sortedAndSearchedPosts;\r\n}","import axios from 'axios'\r\n\r\nexport default class PostService {\r\n\tstatic async getAll(limit = 10, page = 1) {\r\n\t\tconst response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n\t\t\tparams: {\r\n\t\t\t\t_limit: limit,\r\n\t\t\t\t_page: page \r\n\t\t\t}\r\n\t\t})\r\n\t\treturn response\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n\treturn (\r\n\t\t<div className=\"progress\">\r\n\t\t\t<div className=\"indeterminate\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Preloader;","export const getPageCount = (totalCount, limit) => {\r\n\treturn Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n\tlet result = []\r\n\tfor (let i = 0; i < totalPages; i++) {\r\n\t\tresult.push(i + 1)\r\n\t}\r\n\treturn result;\r\n}","import React from 'react';\r\nimport { getPagesArray } from '../../utils/pages';\r\n\r\nconst Pagination = ({totalPages, page, changePage}) => {\r\n\tlet pagesArray = getPagesArray(totalPages)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{pagesArray.map(p =>\r\n\t\t\t\t<button className=\"btn\" onClick={() => changePage(p)} key={p}>{p}</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pagination;","import React, {useState, useEffect} from 'react';\r\nimport PostForm from './PostForm';\r\nimport PostsList from './PostsList';\r\nimport PostFilter from './PostFilter';\r\nimport { usePosts } from '../hooks/usePosts';\r\nimport Button from './UI/button/Button';\r\nimport PostService from './API/PostService';\r\nimport Preloader from './UI/preloader/Preloader';\r\nimport { getPageCount, getPagesArray } from './utils/pages';\r\nimport Pagination from './UI/pagination/Pagination';\r\n\r\nconst Main = () => {\r\n\tconst [posts, setPosts] = useState([])\r\n\r\n\tconst [filter, setFilter] = useState({sort: '', query: ''})\r\n\r\n\tconst sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n\r\n\tconst [isPostLoading, setIsPostLoading] = useState('false')\r\n\r\n\tconst [totalPages, setTotalPages] = useState(0)\r\n\r\n\tconst [limit, setLimit] = useState(10)\r\n\r\n\tconst [page, setPage] = useState(1)\r\n\r\n\r\n\tconst changePage = (page) => {\r\n\t\tsetPage(page)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchPosts()\r\n\t}, [page])\r\n \r\n\tasync function fetchPosts() {\r\n\t\tsetIsPostLoading(true)\r\n\t\tconst response = await PostService.getAll(limit, page)\r\n\t\tsetPosts(response.data)\r\n\t\tsetIsPostLoading(false)\r\n\t\tconst totalCount = response.headers['x-total-count']\r\n\t\tsetTotalPages(getPageCount(totalCount, limit))\r\n\r\n\t}\r\n\r\n\r\n\tconst createPost = (newPost) => {\r\n\t\tsetPosts([...posts, newPost])\r\n\t}\r\n\r\n\tconst removePost = (post) => {\r\n\t\tsetPosts(posts.filter(p => p.id !== post.id))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"content container\">\r\n\t\t\t\t<button className=\"btn\" onClick={fetchPosts} >response</button>\r\n\t\t\t\t<PostForm create={createPost}/>\r\n\t\t\t\t<PostFilter filter={filter} setFilter={setFilter}/>\r\n\t\t\t\t{isPostLoading\r\n\t\t\t\t\t? <Preloader/>\r\n\t\t\t\t\t: <PostsList remove={removePost} title={'Посты про JS'} posts={sortedAndSearchedPosts} />\r\n\r\n\t\t\t\t}\r\n\t\t\t\t<Pagination page={page} changePage={changePage} totalPages={totalPages} />\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Main from './components/Main';\nfunction App() {\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}